<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ToCry - Public Board</title>

    <!-- Pico.css for styling -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css" />

    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">

    <!-- Highlight.js for code highlighting -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/default.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>

    <!-- Marked for markdown parsing -->
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>

    <style>
        body {
            font-family: 'Chivo', sans-serif !important;
            padding: 0;
        }

        /* Public Board Header */
        .public-board-header {
            border-bottom: 1px solid var(--pico-border-color);
            background-color: var(--pico-background-color);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .public-board-header nav {
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .public-board-header nav ul {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .public-board-header a {
            color: var(--pico-primary);
            text-decoration: none;
            font-weight: 700;
            font-size: 1.5rem;
            transition: color 0.2s ease, transform 0.2s ease;
        }

        .public-board-header a:hover {
            color: var(--pico-primary-hover);
            text-decoration: none;
            transform: scale(1.05);
        }

        .public-badge {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
            padding: 0.3rem 0.8rem;
            border-radius: 9999px;
            font-size: 0.8rem;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.4rem;
            box-shadow: 0 2px 4px rgba(40, 167, 69, 0.2);
        }

        .public-badge:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(40, 167, 69, 0.3);
            transition: all 0.2s ease;
        }

        main {
            padding: 2em;
            max-width: none;
        }

        /* Kanban Board Styling */
        .kanban-board {
            display: flex;
            gap: 1rem;
            overflow-x: auto;
            padding: 1rem 0;
            min-height: 60vh;
        }

        .lane {
            min-width: 280px;
            background: var(--pico-card-background-color);
            border: 1px solid var(--pico-card-border-color);
            border-radius: var(--pico-border-radius);
            padding: 1rem;
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .lane-header {
            font-weight: 600;
            font-size: 1.1rem;
            padding: 0.5rem 0;
            border-bottom: 2px solid var(--pico-primary);
            margin-bottom: 0.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .note-count {
            background: var(--pico-primary);
            color: var(--pico-primary-inverse);
            padding: 0.2rem 0.5rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 600;
        }

        .note-card {
            background: var(--pico-background-color);
            border: 1px solid var(--pico-border-color);
            border-radius: var(--pico-border-radius);
            padding: 0.75rem;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .note-card:hover {
            border-color: var(--pico-primary);
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .note-title {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--pico-color);
        }

        .note-tags {
            margin-bottom: 0.5rem;
        }

        .note-tag {
            display: inline-block;
            background-color: var(--pico-muted-background-color);
            color: var(--pico-muted-color);
            padding: 0.2em 0.7em;
            border-radius: 9999px;
            font-size: 0.9em;
            margin-right: 0.5em;
        }

        .note-content {
            color: var(--pico-color);
            line-height: 1.5;
        }

        .note-content.collapsed {
            display: none;
        }

        .expand-indicator {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--pico-muted-color);
            font-size: 0.875rem;
            cursor: pointer;
            margin-top: 0.5rem;
            transition: color 0.2s ease;
        }

        .expand-indicator:hover {
            color: var(--pico-primary);
        }

        .expand-icon {
            transition: transform 0.3s ease;
        }

        .expand-icon.expanded {
            transform: rotate(180deg);
        }

        .note-meta {
            margin-top: 0.5rem;
            font-size: 0.875rem;
            color: var(--pico-muted-color);
        }

        .note-attachments {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid var(--pico-border-color);
        }

        .note-attachments h6 {
            margin: 0 0 0.5rem 0;
            font-size: 0.875rem;
            font-weight: 600;
            color: var(--pico-muted-color);
        }

        .attachment-link {
            display: flex;
            align-items: center;
            padding: 0.5rem 0.75rem;
            margin: 0.25rem 0;
            background-color: var(--pico-form-element-background-color);
            border: 1px solid var(--pico-form-element-border-color);
            border-radius: calc(var(--pico-border-radius) * 0.75);
            text-decoration: none;
            color: var(--pico-color);
            transition: all 0.2s ease-in-out;
            word-break: break-all;
            font-size: 0.875rem;
            gap: 0.5rem;
        }

        .attachment-link:hover {
            background-color: var(--pico-primary-background);
            border-color: var(--pico-primary);
            color: var(--pico-primary);
            text-decoration: none;
            transform: translateY(-1px);
        }

        .priority-tab {
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            border-radius: var(--pico-border-radius) 0 0 var(--pico-border-radius);
        }

        .priority-high-tab { background: linear-gradient(to bottom, #dc3545, #c82333); }
        .priority-medium-tab { background: linear-gradient(to bottom, #ffc107, #e0a800); }
        .priority-low-tab { background: linear-gradient(to bottom, #28a745, #1e7e34); }

        @media (max-width: 768px) {
            .public-board-header nav {
                padding: 1rem;
                flex-direction: column;
                gap: 1rem;
            }

            .public-board-header nav ul {
                justify-content: center;
            }

            .public-board-header a {
                font-size: 1.25rem;
            }

            main {
                padding: 1.5em;
            }

            .kanban-board {
                flex-direction: column;
            }

            .lane {
                min-width: auto;
            }
        }

        /* Smooth scrolling */
        html {
            scroll-behavior: smooth;
        }

        /* Empty lane state */
        .empty-lane {
            text-align: center;
            color: var(--pico-muted-color);
            font-style: italic;
            padding: 2rem 1rem;
        }
    </style>
</head>
<body>
    <!-- Public Board Header -->
    <header class="public-board-header">
        <nav>
            <ul>
                <li><strong><a href="https://tocry.ralsina.me" target="_blank" rel="noopener">ToCry</a></strong></li>
            </ul>
            <ul>
                <li><span class="public-badge">üåê Public Board</span></li>
            </ul>
        </nav>
    </header>

    <main>
        <div style="text-align: center; margin-bottom: 2rem;">
            <p style="color: var(--pico-muted-color); margin: 0;">This is a read-only public view of a Kanban board</p>
        </div>

        <div class="kanban-board">
            <% public_board.lanes.each do |lane| %>
                <div class="lane">
                    <div class="lane-header">
                        <span><%= lane.name %></span>
                        <span class="note-count"><%= lane.notes.size %></span>
                    </div>

                    <% if lane.notes.empty? %>
                        <div class="empty-lane">No notes in this lane</div>
                    <% else %>
                        <% lane.notes.each do |note| %>
                            <div class="note-card" style="position: relative;">
                                <% if note.priority && note.priority.to_s == "high" %>
                                    <div class="priority-tab priority-high-tab"></div>
                                <% elsif note.priority && note.priority.to_s == "medium" %>
                                    <div class="priority-tab priority-medium-tab"></div>
                                <% elsif note.priority && note.priority.to_s == "low" %>
                                    <div class="priority-tab priority-low-tab"></div>
                                <% end %>

                                <div class="note-title"><%= note.title %></div>

                                <% if note.tags && !note.tags.empty? %>
                                    <div class="note-tags">
                                        <% note.tags.each do |tag| %>
                                            <span class="note-tag">#<%= tag %></span>
                                        <% end %>
                                    </div>
                                <% end %>

                                <% if note.content && !note.content.empty? %>
                                    <div class="expand-indicator" onclick="toggleNoteContent(this)">
                                        <span class="expand-icon">‚ñº</span>
                                        <span>Show more</span>
                                    </div>
                                    <div class="note-content collapsed" id="note-content-<%= note.sepia_id %>"></div>
                                <% end %>

                                <% if note.start_date || note.end_date %>
                                    <div class="note-meta">
                                        <% if note.start_date %>
                                            üìÖ <%= note.start_date %>
                                        <% end %>
                                        <% if note.end_date %>
                                            <% if note.start_date %> ‚Üí <% end %>
                                            <%= note.end_date %>
                                        <% end %>
                                    </div>
                                <% end %>

                                <% if note.attachments && !note.attachments.empty? %>
                                    <div class="note-attachments">
                                        <h6>üìé Attachments</h6>
                                        <% note.attachments.each do |attachment| %>
                                            <a href="/attachments/<%= note.sepia_id %>/<%= attachment %>" target="_blank" rel="noopener noreferrer" class="attachment-link" data-attachment="<%= attachment %>">
                                                <%= attachment %>
                                            </a>
                                        <% end %>
                                    </div>
                                <% end %>
                            </div>
                        <% end %>
                    <% end %>
                </div>
            <% end %>
        </div>
    </main>

    <script>
        // Store note content data
        const noteContentData = {
            <% public_board.lanes.each do |lane| %>
                <% lane.notes.each do |note| %>
                    '<%= note.sepia_id %>': <%= note.content.to_json %>,
                <% end %>
            <% end %>
        };

        // Store attachment data for filename extraction
        const attachmentData = {};

        function toggleNoteContent(element) {
            const icon = element.querySelector('.expand-icon');
            const text = element.querySelector('span:last-child');
            const noteId = element.nextElementSibling.id.replace('note-content-', '');
            const contentDiv = element.nextElementSibling;

            if (contentDiv.classList.contains('collapsed')) {
                // Show content
                contentDiv.classList.remove('collapsed');
                contentDiv.innerHTML = marked.parse(noteContentData[noteId]);

                // Apply syntax highlighting
                contentDiv.querySelectorAll('pre code').forEach((block) => {
                    hljs.highlightElement(block);
                });

                icon.classList.add('expanded');
                text.textContent = 'Show less';
            } else {
                // Hide content
                contentDiv.classList.add('collapsed');
                contentDiv.innerHTML = '';
                icon.classList.remove('expanded');
                text.textContent = 'Show more';
            }
        }

        // Helper function to extract original filename from UUID-prefixed filename
        function getOriginalFileName(uuidPrefixedFilename) {
            const parts = uuidPrefixedFilename.split('_');
            if (parts.length > 1 && parts[0].match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i)) {
                return parts.slice(1).join('_');
            }
            return uuidPrefixedFilename;
        }

        // Update attachment link text to show original filenames
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.attachment-link').forEach((link) => {
                const attachment = link.getAttribute('data-attachment');
                if (attachment) {
                    const originalFilename = getOriginalFileName(attachment);
                    link.textContent = originalFilename;
                }
            });
        });

        // Smooth scrolling for keyboard navigation
        document.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {
                e.preventDefault();
                const board = document.querySelector('.kanban-board');
                const scrollAmount = 300; // pixels

                if (e.key === 'ArrowLeft') {
                    board.scrollLeft -= scrollAmount;
                } else {
                    board.scrollLeft += scrollAmount;
                }
            }
        });
    </script>
</body>
</html>
